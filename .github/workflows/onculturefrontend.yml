name: Onculture CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node-version}}

      - name: 'Create env file'
        run: |
          touch .env
          echo REACT_APP_GOOGLE_CLIENT_ID=${{secrets.REACT_APP_GOOGLE_CLIENT_ID}} >> .env
          echo REACT_APP_BACKEND=${{secrets.REACT_APP_BACKEND}} >> .env
          echo DANGEROUSLY_DISABLE_HOST_CHECK=${{secrets.DANGEROUSLY_DISABLE_HOST_CHECK}} >> .env
          echo REACT_APP_SANITY_DATASET=${{secrets.REACT_APP_SANITY_DATASET}} >> .env
          echo REACT_APP_SANITY_PROJECT_ID=${{secrets.REACT_APP_SANITY_PROJECT_ID}} >> .env
          echo REACT_APP_DOCKER_USERNAME=${{secrets.REACT_APP_DOCKER_USERNAME}} >> .env
          echo REACT_APP_DOCKER_PASSWORD=${{secrets.REACT_APP_DOCKER_PASSWORD}} >> .env
          echo REACT_APP_SSH_PRIVATE_KEY=${{secrets.REACT_APP_SSH_PRIVATE_KEY}} >> .env
          echo REACT_APP_DIGITALOCEAN_ACCESS_TOKEN=${{secrets.REACT_APP_DIGITALOCEAN_ACCESS_TOKEN}} >> .env
          echo REACT_APP_DROPLET_NAME=${{secrets.REACT_APP_DROPLET_NAME}} >> .env
          echo REACT_APP_API_PROXY=${{secrets.REACT_APP_API_PROXY}} >> .env
          cat .env

      # - name: Log into Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.REACT_APP_DOCKER_USERNAME }}
      #     password: ${{ secrets.REACT_APP_DOCKER_PASSWORD }}

      # - name: Build and push Docker image
      #   run: |
      #     docker build -t buildonculture/onculture:latest .
      #     docker push buildonculture/onculture:latest

      # - name: Deploy to Digital Ocean
      #   uses: digitalocean/action-doctl@v2
      #   with:
      #     token: ${{ secrets.REACT_APP_DIGITALOCEAN_ACCESS_TOKEN }}
      #     run-command: |
      #       docker pull buildonculture/onculture:latest
      #       docker stop onculture-contain || true
      #       docker rm onculture-contain || true
      #       docker run -d -p 3000:80 --name onculture-contain --env-file .env buildonculture/onculture:latest

      - run: |
          pm2 stop 0
          pm2 start 0
          pm2 save
          sudo service nginx restart
